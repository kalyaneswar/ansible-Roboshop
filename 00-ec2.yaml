- name: Create Roboshop EC2 Instances & Route53 Records
  hosts: localhost
  connection: local
  gather_facts: false

  vars:
    region: us-east-1
    ami_id: ami-09c813fb71547fc4f
    sg_id: sg-087068de447654b44
    hosted_zone: kalyaneswar.site.
    components:
      - mysql
      - mongodb
      - redis
      - rabbitmq
      - catalogue
      - cart
      - shipping
      - user
      - payment
      - web

  tasks:
    - name: Get Route53 Zone ID
      amazon.aws.route53_zone_info:
        query: hosted_zone
      register: zone_info

    - name: Set Hosted Zone ID
      set_fact:
        zone_id: "{{ zone_info.hosted_zone | selectattr('Name', 'equalto', hosted_zone) | map(attribute='Id') | first | regex_replace('/hostedzone/', '') }}"

    - name: Launch EC2 Instances
      amazon.aws.ec2_instance:
        name: "{{ item }}"
        image_id: "{{ ami_id }}"
        instance_type: "{{ 't3.small' if item in ['mongodb', 'mysql', 'shipping'] else 't2.micro' }}"
        region: "{{ region }}"
        security_group: "{{ sg_id }}"
        wait: yes
        tags:
          Name: "{{ item }}"
        count: 1
      loop: "{{ components }}"
      register: ec2_results

    - name: Wait 60s for web instance to get public IP
      pause:
        seconds: 60
      when: "'web' in components"

    - name: Create/Update DNS Record in Route53
      amazon.aws.route53:
        zone: "{{ zone_id }}"
        record: "{{ item.item }}.{{ hosted_zone | regex_replace('\\.$', '') }}"
        type: A
        ttl: 1
        value: "{{ item.instances[0].public_ip if item.item == 'web' else item.instances[0].private_ip }}"
        state: present
      loop: "{{ ec2_results.results }}"
