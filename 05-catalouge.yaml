- name: Install and setup catalouge service
  become: yes
  hosts: localhost
  tasks:
  #  TASK1: Disbale nodejs
    - name: Disable nodejs
      ansible.builtin.shell: dnf module disable nodejs -y

  #  TASK2: Enable nodejs 20
    - name: Enable nodejs
      ansible.builtin.shell: dnf module enable nodejs:20 -y
    
  # Task3: Install nodejs: 20
    - name: Install nodejs
      ansible.builtin.dnf:
        name: nodejs
        state: present
  
  # Task4: Add RoboShop user
    - name: Add RoboShop user
      ansible.builtin.user:
        name: roboshop
  # Task5: Create Directory if not present
    - name: Create app Directory
      ansible.builtin.file:
        path: /app
        state: directory
        mode: '0755'

  # Task6: download zip file
    - name: Download the zip file
      ansible.builtin.get_url:
        url: https://roboshop-builds.s3.amazonaws.com/catalogue.zip
        dest: /tmp/catalogue.zip

  #  Task 7: Unzip the code
    - name: Unzip the file
      ansible.builtin.unarchive:
        src: /tmp/catalogue.zip
        dest: /app
    
  #  Task 8: Npm Install
    - name: Change the working directory and Install NPM
      ansible.builtin.shell: npm install
      args:
        chdir: /app

  # Task 9: catalogue service copy to remote server
    - name: Copy service to remote 
      ansible.builtin.copy:
        src: catalouge.service
        dest: /etc/systemd/system/catalouge.service
        remote_src: yes

  #  Task 10: Demon daemon-reload
    - name: Demon reload
      ansible.builtin.systemd_service:
        daemon_reload: true

  #  Task 11: start and enable catalogue
    - name: start and enable catalogue service
      ansible.builtin.service:
          name: catalouge
          state: started  # Ensure the service is started
          enabled: yes  # Ensure the service starts on boot

  # Task 12: copy mongo repo
    - name: Copy mongo repo to remote 
      ansible.builtin.copy:
        src: mongo.repo
        dest: /etc/yum.repos.d/mongo.repo
        remote_src: yes

    # Task13: Install mongo DB
    - name: Install mongodb client
      ansible.builtin.dnf:
        name: mongodb-mongosh
        state: present

    #  Task14: Check if data available
    - name: get the categories count
      ansible.builtin.command:  mongo --host mongodb.kalyaneswar.site --quiet --eval 'db = db.getSiblingDB("catalogue"); db.products.count()'
      register: product_count

    #  Task 15: load the data
    - name: load catalogue data
      # ansible.builtin.command: mongo --host mongodb.kalyaneswar.site < /app/schema/catalogue.js
      ansible.builtin.command: mongo --host localhost < /app/schema/catalogue.js
      when: product_count.stdout == "0" # keep double quotes

      #  Task 16: start and enable catalogue
    - name: start catalogue service
      ansible.builtin.service:
          name: catalouge
          state: restart  # Ensure the service is started